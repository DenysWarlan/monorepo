{
  "root": true,
  "ignorePatterns": [
    "projects/**/*",
    "*.spec.ts"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "plugins": [
        "eslint-plugin-import",
        "eslint-plugin-rxjs",
        "prefer-arrow",
        "jsdoc",
        "eslint-plugin-unicorn",
        "@angular-eslint/eslint-plugin",
        "@angular-eslint/eslint-plugin-template",
        "@typescript-eslint",
        "@typescript-eslint/tslint"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "hogs",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "hogs",
            "style": "kebab-case"
          }
        ],
        "@typescript-eslint/adjacent-overload-signatures": "off",
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array"
          }
        ],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "Object": {
                "message": "Use custom interface instead"
              },
              "object": null
            }
          }
        ],
        "@typescript-eslint/consistent-type-assertions": "off",
        "@typescript-eslint/consistent-type-definitions": "off",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-member-accessibility": "off",
        "@typescript-eslint/explicit-module-boundary-types": [
          "error",
          {
            "allowArgumentsExplicitlyTypedAsAny": true,
            "allowDirectConstAssertionInArrowFunctions": true,
            "allowHigherOrderFunctions": false,
            "allowTypedFunctionExpressions": false
          }
        ],
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/member-delimiter-style": [
          "off",
          {
            "multiline": {
              "delimiter": "none",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ],
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "selector":  "variable",
            "modifiers": ["const"],
            "format": ["camelCase", "UPPER_CASE", "PascalCase"]
          },
          {
            "selector": "enumMember",
            "format": ["camelCase", "UPPER_CASE", "PascalCase"]
          }
        ],
        "@typescript-eslint/no-dynamic-delete": "error",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-extraneous-class": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-require-imports": "off",
        "@typescript-eslint/no-shadow": "off",
        "@typescript-eslint/no-this-alias": "off",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unused-expressions": "off",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/promise-function-async": "off",
        "@typescript-eslint/quotes": "off",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/semi": [
          "off",
          null
        ],
        "@typescript-eslint/triple-slash-reference": [
          "error",
          {
            "path": "always",
            "types": "prefer-import",
            "lib": "always"
          }
        ],
        "@typescript-eslint/type-annotation-spacing": "off",
        "@typescript-eslint/typedef": [
          "error",
          {
            "parameter": true,
            "propertyDeclaration": true,
            "variableDeclaration": true,
            "memberVariableDeclaration": true,
            "objectDestructuring": true,
            "arrayDestructuring": true
          }
        ],
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/unified-signatures": "error",
        "arrow-body-style": "error",
        "arrow-parens": [
          "off",
          "always"
        ],
        "brace-style": [
          "off",
          "off"
        ],
        "comma-dangle": "off",
        "complexity": "error",
        "constructor-super": "error",
        "curly": "error",
        "default-case": "error",
        "eol-last": "off",
        "eqeqeq": [
          "error",
          "smart"
        ],
        "guard-for-in": "error",
        "id-denylist": [
          "warn",
          "any",
          "Number",
          "number",
          "String",
          "string",
          "Boolean",
          "boolean",
          "Undefined",
          "undefined"
        ],
        "id-match": "error",
        "import/no-default-export": "off",
        "import/no-deprecated": "warn",
        "import/no-extraneous-dependencies": "off",
        "import/no-internal-modules": "off",
        "import/order": "off",
        "indent": "off",
        "jsdoc/check-alignment": "error",
        "jsdoc/check-indentation": "error",
        "jsdoc/newline-after-description": "error",
        "jsdoc/no-types": "error",
        "linebreak-style": "off",
        "max-classes-per-file": "off",
        "max-len": "off",
        "max-lines": "off",
        "new-parens": "off",
        "newline-per-chained-call": "off",
        "no-bitwise": "error",
        "no-caller": "error",
        "no-cond-assign": "error",
        "no-console": [
          "error",
          {
            "allow": [
              "warn",
              "dir",
              "time",
              "timeEnd",
              "timeLog",
              "trace",
              "assert",
              "clear",
              "count",
              "countReset",
              "group",
              "groupEnd",
              "table",
              "debug",
              "info",
              "dirxml",
              "error",
              "groupCollapsed",
              "Console",
              "profile",
              "profileEnd",
              "timeStamp",
              "context"
            ]
          }
        ],
        "no-debugger": "error",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-empty": [
          "error",
          {
            "allowEmptyCatch": true
          }
        ],
        "no-eval": "error",
        "no-extra-semi": "off",
        "no-fallthrough": "error",
        "no-invalid-this": "error",
        "no-irregular-whitespace": "off",
        "no-magic-numbers": "off",
        "no-multiple-empty-lines": "off",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-null/no-null": "off",
        "no-param-reassign": "error",
        "no-plusplus": "warn",
        "no-redeclare": "off",
        "no-restricted-imports": [
          "error",
          "rxjs/Rx"
        ],
        "no-restricted-syntax": [
          "off",
          "ForInStatement"
        ],
        "no-return-await": "error",
        "no-sequences": "off",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-throw-literal": "error",
        "no-trailing-spaces": "off",
        "no-undef-init": "error",
        "no-underscore-dangle": "off",
        "no-unsafe-finally": "error",
        "no-unused-labels": "error",
        "no-useless-constructor": "off",
        "no-var": "error",
        "object-shorthand": "error",
        "padded-blocks": [
          "off",
          {
            "blocks": "never"
          },
          {
            "allowSingleLineBlocks": true
          }
        ],
        "padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "prev": "*",
            "next": "return"
          }
        ],
        "prefer-arrow/prefer-arrow-functions": "off",
        "prefer-const": "error",
        "prefer-object-spread": "error",
        "prefer-template": "error",
        "quote-props": "off",
        "quotes": "off",
        "radix": "error",
        "react/jsx-curly-spacing": "off",
        "react/jsx-equals-spacing": "off",
        "react/jsx-tag-spacing": [
          "off",
          {
            "afterOpening": "allow",
            "closingSlash": "allow"
          }
        ],
        "react/jsx-wrap-multilines": "off",
        "require-await": "error",
        "rxjs/no-unsafe-takeuntil": "warn",
        "semi": "off",
        "space-before-function-paren": "off",
        "space-in-parens": [
          "off",
          "never"
        ],
        "spaced-comment": [
          "error",
          "always",
          {
            "markers": [
              "/"
            ]
          }
        ],
        "unicorn/filename-case": "error",
        "unicorn/prefer-ternary": "error",
        "use-isnan": "error",
        "yoda": "error",
        "@typescript-eslint/tslint/config": [
          "error",
          {
            "rules": {
              "comment-type": [
                true,
                "doc",
                "singleline",
                "multiline"
              ],
              "encoding": true,
              "no-null-undefined-union": true,
              "no-promise-as-boolean": [
                true,
                {
                  "promise-classes": [
                    "CustomPromise"
                  ]
                }
              ],
              "no-tautology-expression": true,
              "no-unnecessary-callback-wrapper": true,
              "prefer-method-signature": false,
              "switch-final-break": true,
              "unnecessary-else": [
                true,
                {
                  "allow-else-if": true
                }
              ]
            }
          }
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ]
}
